{
  "matrix_operations": {
    "title": "Matrix Operations",
    "add_sub": {
      "title": "Matrix Addition and Subtraction",
      "description": "This calculator allows you to perform matrix addition and subtraction operations, showing the calculation steps and the final result.",
      "matrix_a": "Matrix A",
      "matrix_b": "Matrix B",
      "preview": "Preview:",
      "format_description": "Enter the elements separated by spaces and the rows separated by semicolons. Example: 1 2 3; 4 5 6; 7 8 9 for a 3x3 matrix.",
      "operations": {
        "title": "Operation",
        "addition": "Addition",
        "subtraction": "Subtraction"
      },
      "examples": "Examples",
      "calculate": "Calculate",
      "result": "Result",
      "addition_explanation": "In matrix addition, we add the corresponding elements (same position) of both matrices.",
      "subtraction_explanation": "In matrix subtraction, we subtract the corresponding elements (same position) of matrix B from matrix A.",
      "hide_explanation": "Hide detailed explanation",
      "show_explanation": "Show detailed explanation",
      "step_by_step": "Step by step solution",
      "errors": {
        "enter_matrix_a": "Please enter Matrix A.",
        "enter_matrix_b": "Please enter Matrix B.",
        "invalid_matrix_a_format": "Could not interpret Matrix A. Check the format (values separated by spaces, rows separated by semicolons).",
        "invalid_matrix_b_format": "Could not interpret Matrix B. Check the format (values separated by spaces, rows separated by semicolons).",
        "invalid_matrix_a": "Matrix A is invalid. Make sure all rows have the same number of columns.",
        "invalid_matrix_b": "Matrix B is invalid. Make sure all rows have the same number of columns.",
        "different_dimensions": "Matrices A and B have different dimensions (A: {{dimA}}, B: {{dimB}}). To perform addition or subtraction, matrices must have the same dimensions.",
        "unknown_error": "Unknown error when processing matrices.",
        "invalid_values": "The matrix contains invalid values. Use only numbers.",
        "same_columns": "All rows of a matrix must have the same number of columns."
      },
      "requirement": {
        "title": "Requirement for matrix addition and subtraction:",
        "description": "Matrices A and B must have the same dimensions (same number of rows and columns).",
        "compatible": "✓ Compatible: Matrix A ({{rowsA}}×{{colsA}}) = Matrix B ({{rowsB}}×{{colsB}})",
        "incompatible": "✗ Incompatible: Matrix A ({{rowsA}}×{{colsA}}) ≠ Matrix B ({{rowsB}}×{{colsB}})"
      }
    },
    "transpose": {
      "title": "Matrix Transposition",
      "description": "This calculator allows you to transpose a matrix, showing the step-by-step process and the final result.",
      "matrix": "Matrix",
      "matrix_a": "Matrix A",
      "placeholder": "Ex: 1 2 3; 4 5 6",
      "input_format": "Enter elements separated by spaces and rows separated by semicolons. Example: 1 2 3; 4 5 6 for a 2x3 matrix.",
      "preview": "Preview",
      "dimension": "Dimension",
      "operation": "Transposition",
      "result_matrix": "Matrix A<sup>T</sup>",
      "calculate": "Calculate",
      "result": "Result",
      "hide_explanation": "Hide detailed explanation",
      "show_explanation": "Show detailed explanation",
      "step_by_step": "Step by step solution",
      "info": {
        "title": "Matrix transposition",
        "description": "The transposed matrix is obtained by transforming the rows of the original matrix into columns and vice versa.",
        "dimensions": "If A is an m×n matrix, then A<sup>T</sup> will be an n×m matrix."
      },
      "examples": "Examples",
      "errors": {
        "enter_matrix": "Please enter the matrix.",
        "invalid_format": "Could not interpret the matrix. Check the format (values separated by spaces, rows separated by semicolons).",
        "invalid_matrix": "The matrix is invalid. Make sure all rows have the same number of columns.",
        "invalid_values": "The matrix contains invalid values. Use only numbers.",
        "same_columns": "All rows of a matrix must have the same number of columns.",
        "unknown_error": "Unknown error processing the matrix."
      },
      "steps": {
        "invalid_matrix": "The matrix is not valid. Cannot calculate the transpose.",
        "original_matrix": "Original matrix ({{rows}}×{{cols}}):",
        "understand_concept": "Step {{step}}: Understand the concept of matrix transpose.",
        "concept_description": "The transpose of a matrix is obtained by transforming its rows into columns and vice versa.",
        "dimension_change": "If A is a matrix of dimension {{rows}}×{{cols}}, then A^T will be a matrix of dimension {{cols}}×{{rows}}.",
        "initial_form": "Initial form: A = {{rows}}×{{cols}} matrix",
        "apply_transposition": "Step {{step}}: Apply the transposition process.",
        "applying_transpose": "Applying transposition: A^T = {{cols}}×{{rows}} matrix",
        "element_mapping_detail": "Step {{step}}: Detailed mapping of elements.",
        "element_mapping": "For each element A[i,j] of the original matrix, the corresponding element in the transpose will be A^T[j,i].",
        "element_example": "Element A[{{row}},{{col}}] = {{value}} → A^T[{{newRow}},{{newCol}}] = {{value}}",
        "and_so_on": "... and so on for all elements.",
        "resulting_transpose": "Result: Transpose matrix ({{cols}}×{{rows}}):",
        "verification_properties": "Verification: Properties of transposition",
        "prop1_title": "1. (A^T)^T = A",
        "prop1_description": "The transpose of the transpose of a matrix is the original matrix itself.",
        "prop2_title": "2. (A + B)^T = A^T + B^T",
        "prop2_description": "The transpose of the sum of two matrices is equal to the sum of the transposes.",
        "prop3_title": "3. (c×A)^T = c×A^T",
        "prop3_description": "The transpose of a matrix multiplied by a scalar is equal to the transpose multiplied by the same scalar.",
        "prop4_title": "4. (A×B)^T = B^T×A^T",
        "prop4_description": "The transpose of the product of two matrices is equal to the product of the transposes in reverse order.",
        "symmetric_true": "Special verification: This matrix is symmetric (A = A^T).",
        "symmetric_explanation": "A matrix is symmetric when it is equal to its transpose.",
        "symmetric_false": "Special verification: This matrix is not symmetric (A ≠ A^T).",
        "final_result": "Final result: Transposition completed successfully."
      },
      "concept": {
        "definition": "Matrix transposition is an operation that transforms the rows of the original matrix into columns and columns into rows. It is a fundamental operation in linear algebra with various applications in different areas of mathematics and applied sciences.",
        "notation_title": "Notation",
        "notation_description": "If A = [aᵢⱼ] is an m×n matrix, then the transpose of A, denoted by Aᵀ (or A' or Aᵗʳ), is the n×m matrix defined by:",
        "notation_formula": "(Aᵀ)ᵢⱼ = aⱼᵢ",
        "notation_explanation": "That is, the element at position (i,j) of the transpose matrix is equal to the element at position (j,i) of the original matrix.",
        "visual_interpretation": "Visual Interpretation",
        "visual_steps": "To obtain the transpose of a matrix:",
        "visual_step_1": "The first row of the original matrix becomes the first column of the transpose matrix",
        "visual_step_2": "The second row of the original matrix becomes the second column of the transpose matrix",
        "visual_step_3": "And so on for all rows of the original matrix",
        "visual_example_title": "Visual Example",
        "visual_example_description": "For the matrix A = [1 2 3; 4 5 6]:",
        "specific_applications": "Specific Applications",
        "app_linear_systems": "Linear equation systems",
        "app_linear_systems_desc": "In solving systems using methods like least squares",
        "app_linear_transformations": "Linear transformations",
        "app_linear_transformations_desc": "To represent adjoint transformations",
        "app_matrix_decomposition": "Matrix decomposition",
        "app_matrix_decomposition_desc": "In methods like SVD (Singular Value Decomposition) and QR decomposition",
        "app_quadratic_forms": "Quadratic forms",
        "app_quadratic_forms_desc": "To simplify expressions of the form x^T A x",
        "practical_applications": "Practical Applications",
        "app_signal_processing": "In operations like convolution and correlation",
        "app_statistics": "In calculating covariance and correlation matrices",
        "app_optimization": "In linear and non-linear programming problems",
        "app_machine_learning": "In data processing and neural networks",
        "app_computer_graphics": "In transformations and projections",
        "app_quantum_physics": "In operations with Hermitian operators",
        "properties_title": "Properties",
        "properties_list_title": "Transposition Properties",
        "prop_double": "Double transposition",
        "prop_double_desc": "Transposing twice returns the original matrix.",
        "prop_linearity": "Linearity",
        "prop_linearity_desc": "Transposition distributes over linear combinations of matrices.",
        "prop_multiplication": "Multiplication",
        "prop_multiplication_desc": "The transpose of a product is the product of the transposes in reverse order.",
        "prop_determinant": "Determinant",
        "prop_determinant_desc": "The determinant of a matrix is equal to the determinant of its transpose.",
        "prop_inverse": "Inversion",
        "prop_inverse_desc": "The transpose of the inverse is equal to the inverse of the transpose.",
        "prop_rank": "Rank",
        "prop_rank_desc": "The rank of a matrix is equal to the rank of its transpose.",
        "prop_trace": "Trace",
        "prop_trace_desc": "The trace of a matrix is equal to the trace of its transpose.",
        "definition_title": "Definition",
        "special_cases_title": "Special Cases and Examples",
        "example_diagonal_title": "Example 1: Diagonal Matrix",
        "example_diagonal_explanation": "The transpose of a diagonal matrix is the diagonal matrix itself.",
        "example_triangular_title": "Example 2: Triangular Matrix",
        "example_triangular_explanation": "The transpose of a lower triangular matrix is an upper triangular matrix and vice versa.",
        "example_scalar_title": "Example 3: Scalar Matrix",
        "example_scalar_for": "For a scalar matrix kI:",
        "example_scalar_explanation": "The transpose of a scalar matrix is the scalar matrix itself.",
        "common_errors_title": "Common Errors",
        "error_product_order": "Confusing the order of factors in the transposition of a product: (AB)ᵀ = BᵀAᵀ, not AᵀBᵀ",
        "error_symmetric_assumption": "Assuming that any matrix is symmetric (A = Aᵀ), when this is a special property",
        "error_complex_conjugate": "Ignoring the need for conjugation when transposing complex matrices",
        "error_inverse_confusion": "Confusing transposition with matrix inversion",
        "error_dimensions": "Forgetting that the transpose of an m×n matrix is an n×m matrix, changing the dimensions",
        "efficient_algorithms_title": "Efficient Algorithms",
        "efficient_algorithms_description": "Techniques for efficient matrix transposition in computing:",
        "algo_in_place": "In-place transposition",
        "algo_in_place_desc": "For square matrices, saves memory by swapping only the necessary elements",
        "algo_blocking": "Blocking algorithms",
        "algo_blocking_desc": "Improves cache locality in large matrices",
        "algo_parallel": "Parallelization",
        "algo_parallel_desc": "Divides the matrix into sub-matrices for simultaneous processing",
        "algo_sparse": "CSR/CSC representation",
        "algo_sparse_desc": "For sparse matrices, alternates between row-based and column-based representation",
        "matrix_decompositions_title": "Transposition and Matrix Decompositions",
        "matrix_decompositions_description": "Transposition plays a fundamental role in various decompositions:",
        "decomp_qr": "QR Decomposition",
        "decomp_qr_desc": "Q is an orthogonal matrix (QᵀQ = I) and R is upper triangular",
        "decomp_svd": "SVD Decomposition (A = UΣVᵀ)",
        "decomp_svd_desc": "Where V is the matrix of eigenvectors of AᵀA",
        "decomp_spectral": "Spectral decomposition",
        "decomp_spectral_desc": "For symmetric matrices A = QΛQᵀ",
        "decomp_power_method": "Power method",
        "decomp_power_method_desc": "For finding eigenvalues using AᵀA multiplications"
      }
    },
    "steps": {
      "identify_matrices": "Step {{step}}: Identify the matrices and the operation.",
      "initial_form": "Initial form: {{operation}}",
      "matrix_a_representation": "Matrix A ({{rows}}×{{cols}}):",
      "matrix_b_representation": "Matrix B ({{rows}}×{{cols}}):",
      "matrix_dimensions": "Step {{step}}: Analyze the dimensions of the matrices.",
      "checking_dimensions": "Verifying dimensions: Matrix A has {{cols}} columns and Matrix B has {{rows}} rows.",
      "element_operation": "Step {{step}}: Apply the operation to each element.",
      "result_matrix": "Step {{step}}: The resulting matrix.",
      "result_description": "Result of {{operation}} with dimension {{rows}}×{{cols}}:",
      "verification_properties": "Verifying the properties of {{operation}}:",
      "checking_commutative": "Verifying commutative property: A + B = B + A",
      "commutative_explanation": "Matrix addition is commutative. The order of matrices does not affect the result.",
      "checking_non_commutative": "Verifying non-commutative property: A × B ≠ B × A (in general)",
      "non_commutative_explanation": "Matrix multiplication is not commutative. The order of the factors matters.",
      "checking_associative": "Verifying associative property: (A × B) × C = A × (B × C)",
      "associative_explanation": "Matrix multiplication is associative. The way we group the matrices does not change the final result.",
      "relation_with_addition": "Verifying distributive property: A × (B + C) = A × B + A × C",
      "relation_explanation": "Matrix multiplication is distributive with respect to matrix addition.",
      "checking_distributive": "Verifying distributive property: k × (A + B) = k × A + k × B",
      "distributive_explanation": "Scalar multiplication is distributive with respect to matrix addition.",
      "neutral_element": "Verifying identity element: 1 × A = A",
      "neutral_explanation": "The scalar value 1 is the identity element. Multiplying a matrix by 1 does not change it.",
      "final_result": "Final result: {{operation}} completed successfully with dimension {{rows}}×{{cols}}.",
      "calculating_element": "Step {{step}}: Detailed calculation for each element of the resulting matrix.",
      "dimension_requirement": "{{operation}}: Important requirement: Matrices must have the same dimensions to be added or subtracted."
    },
    "mathematical_concept": {
      "title": "Mathematical Concept",
      "definition_title": "Definition",
      "properties_title": "Properties",
      "definition_text": "A matrix is a rectangular collection of numbers organized in rows and columns. Matrix addition and subtraction are mathematical operations that combine corresponding elements of two matrices.",
      "important_property": "Important property: It is only possible to add or subtract matrices that have the same dimensions.",
      "operations_title": "Matrix Operations",
      "addition_title": "Matrix Addition",
      "addition_description": "If A and B are matrices of the same dimension, then A + B is the matrix obtained by adding the corresponding elements:",
      "addition_formula": "(A + B)ᵢⱼ = Aᵢⱼ + Bᵢⱼ",
      "subtraction_title": "Matrix Subtraction",
      "subtraction_description": "If A and B are matrices of the same dimension, then A - B is the matrix obtained by subtracting the corresponding elements:",
      "subtraction_formula": "(A - B)ᵢⱼ = Aᵢⱼ - Bᵢⱼ",
      "properties_addition_title": "Properties of Matrix Addition",
      "properties": {
        "commutative_title": "Commutative:",
        "commutative_formula": "A + B = B + A",
        "commutative_description": "The order of matrices in addition does not change the result.",
        "associative_title": "Associative:",
        "associative_formula": "(A + B) + C = A + (B + C)",
        "associative_description": "The way we group matrices in addition does not change the result.",
        "neutral_title": "Neutral element:",
        "neutral_formula": "A + O = A (where O is the null matrix)",
        "neutral_description": "The null matrix (with all elements equal to zero) is the neutral element of addition.",
        "opposite_title": "Opposite element:",
        "opposite_formula": "A + (-A) = O",
        "opposite_description": "For each matrix A, there is an opposite matrix -A such that A + (-A) is the null matrix.",
        "distributive_title": "Distributive with respect to scalar multiplication:",
        "distributive_formula": "k(A + B) = kA + kB",
        "distributive_description": "Multiplication by a scalar k distributes over addition of matrices."
      },
      "properties_subtraction_title": "Properties of Matrix Subtraction",
      "subtraction_properties": {
        "non_commutative_title": "Non-commutative:",
        "non_commutative_formula": "A - B ≠ B - A (in general)",
        "non_commutative_description": "The order of matrices in subtraction changes the result.",
        "addition_relation_title": "Relation with addition:",
        "addition_relation_formula": "A - B = A + (-B)",
        "addition_relation_description": "Subtraction can be seen as the addition of the opposite matrix.",
        "null_difference_title": "Null difference property:",
        "null_difference_formula": "A - A = O",
        "null_difference_description": "The subtraction of a matrix from itself results in the null matrix.",
        "distributive_title": "Distributive with respect to scalar multiplication:",
        "distributive_formula": "k(A - B) = kA - kB",
        "distributive_description": "Multiplication by a scalar k distributes over subtraction of matrices."
      },
      "examples_title": "Examples",
      "addition_example_title": "2×2 Matrix Addition",
      "matrix_a": "Matrix A",
      "matrix_b": "Matrix B",
      "result_matrix": "Result Matrix",
      "subtraction_example_title": "2×2 Matrix Subtraction",
      "practical_applications_title": "Practical Applications",
      "applications": {
        "economics": "Economics: Representation of economic data and transaction analysis",
        "engineering": "Engineering: Structural analysis and geometric transformations",
        "physics": "Physics: Representation of systems of equations",
        "computer_graphics": "Computer Graphics: Transformations and animations",
        "statistics": "Statistics: Multivariate data analysis"
      },
      "special_matrices_title": "Special Matrices",
      "special_matrices": {
        "identity_title": "Identity Matrix (I)",
        "identity_description": "A square matrix with 1's on the main diagonal and 0's elsewhere. For any matrix A, A + I ≠ A, but A × I = A.",
        "null_title": "Null Matrix (O)",
        "null_description": "A matrix with all elements equal to zero. For any matrix A, A + O = A.",
        "transpose_title": "Transpose Matrix (Aᵀ)",
        "transpose_description": "The transpose of a matrix A is obtained by exchanging rows for columns. Property: (A + B)ᵀ = Aᵀ + Bᵀ"
      }
    },
    "examples": {
      "small_integers": "Small integers (2×2)",
      "large_integers": "Large integers (3×3)",
      "negative_numbers": "Negative numbers (2×2)",
      "mixed_numbers": "Mixed numbers (3×3)",
      "identity_matrix": "Identity matrix (3×3)",
      "zero_matrix": "Zero matrix (2×2)",
      "matrix_2x3": "2×3 Matrix",
      "matrix_3x2": "3×2 Matrix",
      "identity_matrix_3x3": "3×3 Identity Matrix",
      "matrix_equal_rows": "Matrix with equal rows",
      "matrix_equal_columns": "Matrix with equal columns"
    },
    "multiplication": {
      "title": "Matrix Multiplication",
      "description": "This calculator allows you to perform matrix multiplication operations and scalar multiplication, showing the calculation steps and the final result.",
      "matrix_a": "Matrix A",
      "matrix_b": "Matrix B",
      "scalar_value": "Scalar Value",
      "preview": "Preview",
      "dimension": "Dimension",
      "operation_type": "Operation",
      "matrix_multiplication": "Matrix × Matrix",
      "scalar_multiplication": "Scalar × Matrix",
      "scalar_title": "Scalar Multiplication",
      "examples": "Examples",
      "calculate": "Calculate",
      "compatibility_requirement": {
        "title": "Matrix multiplication requirement",
        "description": "The number of columns in matrix A must equal the number of rows in matrix B.",
        "compatible": "✓ Compatible: {columnsA} columns (A) = {rowsB} rows (B)",
        "incompatible": "✗ Incompatible: {columnsA} columns (A) ≠ {rowsB} rows (B)"
      },
      "scalar_info": "In scalar multiplication, each element of the matrix is multiplied by the scalar value.",
      "input_format": "Enter elements separated by spaces and rows separated by semicolons. Example: 1 2 3; 4 5 6; 7 8 9 for a 3x3 matrix.",
      "result": "Result",
      "explanation": {
        "matrix_description": "In matrix multiplication A×B, each element of the result is the scalar product of the corresponding row of A with the corresponding column of B.",
        "scalar_description": "In scalar multiplication k×A, each element of the matrix is multiplied by the scalar k.",
        "show": "Show detailed explanation",
        "hide": "Hide detailed explanation"
      },
      "concept": {
        "definition": "Matrix multiplication is a binary operation that produces a single matrix from two matrices. For two matrices A and B to be multiplied, the number of columns in matrix A must equal the number of rows in matrix B.",
        "important_requirement": "Important requirement",
        "dimension_requirement": "If A is an m×n matrix and B is an n×p matrix, then the product AB is an m×p matrix.",
        "formula_title": "Formula",
        "formula_description": "If A = [aᵢⱼ] is an m×n matrix and B = [bᵢⱼ] is an n×p matrix, then the product C = AB is the m×p matrix whose elements are given by:",
        "formula_expression": "cᵢⱼ = Σ aᵢₖ × bₖⱼ (for k from 1 to n)",
        "formula_explanation": "That is, the element cᵢⱼ is the scalar product of the i-th row of A with the j-th column of B.",
        "visual_interpretation": "Visual Interpretation",
        "calculation_explanation": "To calculate the element at position (i,j) of the resulting matrix:",
        "step1": "Take the i-th row of matrix A",
        "step2": "Take the j-th column of matrix B",
        "step3": "Multiply the corresponding elements",
        "step4": "Sum the obtained products",
        "visual_example_title": "Visual Example",
        "example_description": "To calculate the element c₁₁ of the product C = A×B:",
        "example_formula": "c₁₁ = a₁₁×b₁₁ + a₁₂×b₂₁ + ... + a₁ₙ×bₙ₁",
        "specific_applications_title": "Specific Applications",
        "application1_title": "Composition of linear transformations",
        "application1_description": "If A and B represent linear transformations, AB represents the composition of these transformations",
        "application2_title": "Systems of linear equations",
        "application2_description": "Ax = b, where A is the coefficient matrix, x is the vector of unknowns, and b is the vector of constants",
        "application3_title": "Markov chains",
        "application3_description": "Where the transition matrix represents the probabilities of state changes",
        "practical_applications_title": "Practical Applications",
        "practical1_title": "Linear Equation Systems",
        "practical1_description": "For solving systems of equations",
        "practical2_title": "Geometric Transformations",
        "practical2_description": "For rotations, reflections, and projections",
        "practical3_title": "Computer Graphics",
        "practical3_description": "For 3D transformations and rendering",
        "practical4_title": "Cryptography",
        "practical4_description": "In algorithms like Hill cipher",
        "practical5_title": "Economics",
        "practical5_description": "In input-output models and Leontief analysis",
        "practical6_title": "Physics",
        "practical6_description": "For coordinate transformations and quantum mechanics",
        "practical7_title": "Machine Learning",
        "practical7_description": "In operations with neural networks and weight matrices",
        "practical8_title": "Graph Theory",
        "practical8_description": "In representing graphs through adjacency matrices",
        "properties_title": "Properties of Matrix Multiplication",
        "property1_title": "Non-commutative",
        "property1_description": "In general, AB ≠ BA",
        "property1_explanation": "The order of matrices in multiplication matters.",
        "property2_title": "Associative",
        "property2_description": "(AB)C = A(BC)",
        "property2_explanation": "The way we group multiplications does not change the result.",
        "property3_title": "Distributive with respect to addition",
        "property3_description": "A(B+C) = AB + AC",
        "property3_explanation": "Multiplication distributes over addition.",
        "property4_title": "Multiplication by identity matrix",
        "property4_description": "AI = IA = A",
        "property4_explanation": "The identity matrix is the neutral element of multiplication.",
        "property5_title": "Multiplication by null matrix",
        "property5_description": "A0 = 0A = 0",
        "property5_explanation": "The product with the null matrix is always the null matrix.",
        "property6_title": "Transposition of product",
        "property6_description": "(AB)ᵀ = BᵀAᵀ",
        "property6_explanation": "The transpose of a product is the product of the transposes in reverse order.",
        "property7_title": "Determinant of product",
        "property7_description": "det(AB) = det(A) × det(B)",
        "property7_explanation": "The determinant of the product is the product of the determinants.",
        "special_matrices_title": "Multiplication of Special Types of Matrices",
        "special1_title": "Diagonal matrices",
        "special1_description": "The product of two diagonal matrices is a diagonal matrix whose elements are the products of the corresponding elements",
        "special2_title": "Triangular matrices",
        "special2_description": "The product of two upper (or lower) triangular matrices is also an upper (or lower) triangular matrix",
        "special3_title": "Orthogonal matrices",
        "special3_description": "If Q is an orthogonal matrix, then QᵀQ = QQᵀ = I",
        "special4_title": "Symmetric matrices",
        "special4_description": "The product of a symmetric matrix with itself is also symmetric: AAᵀ is always symmetric for any matrix A",
        "examples_title": "Special Cases and Examples",
        "example1_title": "Example 1: 2×2 by 2×2 matrix multiplication",
        "example1_formula": "[a b] × [e f] = [ae+bg af+bh]\n[c d]   [g h]   [ce+dg cf+dh]",
        "example2_title": "Example 2: Row matrix by column matrix",
        "example2_formula1": "[a b c] × [d] = [ad+be+cf]",
        "example2_formula2": "         [e]",
        "example2_formula3": "         [f]",
        "example2_explanation": "Results in a scalar (1×1 matrix)",
        "example3_title": "Example 3: Column matrix by row matrix",
        "example3_formula1": "[a] × [d e f] = [ad ae af]",
        "example3_formula2": "[b]             [bd be bf]",
        "example3_formula3": "[c]             [cd ce cf]",
        "example3_explanation": "Results in a rank-1 matrix",
        "common_errors_title": "Common Errors",
        "error1": "Assuming that matrix multiplication is commutative (AB = BA)",
        "error2": "Trying to multiply matrices with incompatible dimensions",
        "error3": "Confusing matrix multiplication with element-wise multiplication",
        "error4": "Forgetting that the order of factors affects the result and can even make the operation impossible",
        "error5": "Incorrectly distributing a scalar in expressions with matrix multiplication",
        "scalar_definition": "Scalar multiplication is an operation that multiplies each element of a matrix by a number (scalar). It is one of the fundamental operations of linear algebra.",
        "scalar_formula_description": "If A = [aᵢⱼ] is an m×n matrix and k is a scalar, then the product kA is the m×n matrix whose elements are given by:",
        "scalar_formula_expression": "(kA)ᵢⱼ = k × aᵢⱼ",
        "scalar_formula_explanation": "That is, each element of the resulting matrix is k times the corresponding element of the original matrix.",
        "geometric_interpretation": "Geometric Interpretation",
        "geometric_description": "The multiplication of a matrix by a scalar can be geometrically interpreted as:",
        "geometric1_title": "Scaling",
        "geometric1_description": "when |k| > 1 (amplification)",
        "geometric2_title": "Scaling",
        "geometric2_description": "when 0 < |k| < 1 (reduction)",
        "geometric3_title": "Reflection",
        "geometric3_description": "when k < 0, in addition to scaling",
        "geometric4_title": "Projection to zero",
        "geometric4_description": "when k = 0",
        "scalar_example_description": "For matrix A = [1 2; 3 4] and scalar k = 2:",
        "scalar_example_expression": "2 × [1 2] = [2 4]\n    [3 4]   [6 8]",
        "scalar_application1_title": "Scale transformations",
        "scalar_application1_description": "In computer graphics to resize objects",
        "scalar_application2_title": "Normalization",
        "scalar_application2_description": "Multiplication by 1/||v|| to normalize a vector v",
        "scalar_application3_title": "Unit changes",
        "scalar_application3_description": "Conversion between different measurement systems",
        "scalar_application4_title": "Intensity adjustment",
        "scalar_application4_description": "In image processing to alter brightness/contrast",
        "scalar_properties_title": "Properties of Scalar Multiplication",
        "scalar_property1_title": "Distributive with respect to matrix addition",
        "scalar_property1_description": "k(A+B) = kA + kB",
        "scalar_property1_explanation": "The scalar distributes over matrix addition.",
        "scalar_property2_title": "Distributive with respect to scalar addition",
        "scalar_property2_description": "(k+m)A = kA + mA",
        "scalar_property2_explanation": "The sum of scalars distributes over the matrix.",
        "scalar_property3_title": "Associative with scalar multiplication",
        "scalar_property3_description": "(km)A = k(mA)",
        "scalar_property3_explanation": "Scalar multiplication associates over matrices.",
        "scalar_property4_title": "Neutral element",
        "scalar_property4_description": "1A = A",
        "scalar_property4_explanation": "Scalar 1 is the neutral element of multiplication.",
        "scalar_property5_title": "Multiplication by zero",
        "scalar_property5_description": "0A = 0",
        "scalar_property5_explanation": "Multiplying by zero results in the null matrix.",
        "scalar_property6_title": "Behavior with transpose",
        "scalar_property6_description": "(kA)ᵀ = kAᵀ",
        "scalar_property6_explanation": "Transposing and multiplying by scalar are commutative operations.",
        "scalar_property7_title": "Effect on determinant",
        "scalar_property7_description": "det(kA) = kⁿ·det(A)",
        "scalar_property7_explanation": "For a matrix A of order n×n.",
        "scalar_special_title": "Special Types of Scalars",
        "scalar_special1_title": "k = -1",
        "scalar_special1_description": "Inverts the sign of all elements, equivalent to a reflection",
        "scalar_special2_title": "k = 0",
        "scalar_special2_description": "Transforms any matrix into the null matrix (collapse)",
        "scalar_special3_title": "k = 1",
        "scalar_special3_description": "Keeps the matrix unchanged (scalar identity)",
        "scalar_special4_title": "k = 1/n",
        "scalar_special4_description": "Divides all elements by n (typically used in averages or normalizations)",
        "scalar_special5_title": "k imaginary",
        "scalar_special5_description": "In complex matrices, multiplies by imaginary numbers (rotation in the complex plane)",
        "scalar_example1_title": "Example 1: Multiplication by -1 (Inversion)",
        "scalar_example1_formula": "-1 × [1 2] = [-1 -2]\n     [3 4]   [-3 -4]",
        "scalar_example2_title": "Example 2: Multiplication by 0.5 (Half reduction)",
        "scalar_example2_formula": "0.5 × [10 20] = [5 10]\n      [30 40]   [15 20]",
        "scalar_example3_title": "Example 3: Effect on determinant",
        "scalar_example3_description": "For a 2×2 matrix: det([a b; c d]) = ad - bc",
        "scalar_example3_formula": "Multiplying by k: det(k[a b; c d]) = det([ka kb; kc kd]) = (ka)(kd) - (kb)(kc) = k²(ad - bc) = k²·det(A)"
      },
      "errors": {
        "empty_matrix_a": "Please enter Matrix A.",
        "empty_matrix_b": "Please enter Matrix B.",
        "invalid_matrix_a": "Could not interpret Matrix A. Check the format (values separated by spaces, rows separated by semicolons).",
        "invalid_matrix_b": "Could not interpret Matrix B. Check the format (values separated by spaces, rows separated by semicolons).",
        "invalid_matrix_a_rows": "Matrix A is invalid. Make sure all rows have the same number of columns.",
        "invalid_matrix_b_rows": "Matrix B is invalid. Make sure all rows have the same number of columns.",
        "incompatible_dimensions": "The matrices cannot be multiplied. Matrix A is {dimA} and matrix B is {dimB}. To multiply A×B, the number of columns in A must equal the number of rows in B.",
        "calculation_error": "Error calculating matrix product.",
        "empty_scalar": "Please enter a scalar value.",
        "invalid_scalar": "The scalar value is not a valid number.",
        "unknown_error": "Unknown error processing matrices."
      },
      "steps": {
        "step": "Step {{step}}",
        "identify_matrices": "Identify the matrices and the operation.",
        "initial_form_matrix": "Initial form: A × B",
        "initial_form_scalar": "Initial form: {{scalar}} × A",
        "matrix_a": "Matrix A ({{rows}}×{{cols}}):",
        "matrix_b": "Matrix B ({{rows}}×{{cols}}):",
        "scalar": "Scalar: {{scalar}}",
        "check_dimensions": "Check compatibility of dimensions.",
        "dimensions_verification": "Verifying dimensions: Matrix A has {{colsA}} columns and matrix B has {{rowsB}} rows.",
        "dimensions_compatible": "Since the number of columns in A equals the number of rows in B, multiplication is possible.",
        "result_dimension": "The resulting matrix will have dimension {{rowsA}}×{{colsB}}.",
        "apply_multiplication": "Apply the multiplication process.",
        "matrix_formula": "Applying the formula: (A × B)ᵢⱼ = Σ(Aᵢₖ × Bₖⱼ) for k from 1 to {{colsA}}",
        "element_calculation_description": "For each element (i,j) of the resulting matrix, we calculate the scalar product of row i of matrix A with column j of matrix B.",
        "calculation_error": "Error calculating the result.",
        "detailed_calculation": "Detailed calculation for each element of the resulting matrix.",
        "calculating_element": "Calculating: Element ({{i}},{{j}}) of the resulting matrix:",
        "calculating_scalar_element": "Calculating: Element ({{i}},{{j}}): {{scalar}} × {{value}} = {{result}}",
        "result_matrix": "Result matrix.",
        "result_matrix_product": "Result: Product matrix {{rows}}×{{cols}}",
        "result_matrix_scaled": "Result: Scaled matrix {{rows}}×{{cols}}",
        "verification": "Verification: Properties of matrix multiplication",
        "non_commutative": "Verifying the non-commutative property: A × B ≠ B × A (in general)",
        "non_commutative_desc": "Matrix multiplication is not commutative. Generally, changing the order of matrices results in a different product, or even an impossible operation due to dimension incompatibility.",
        "associative": "Verifying associative property: (A × B) × C = A × (B × C)",
        "associative_desc": "Matrix multiplication is associative. The way we group multiplications does not change the final result, as long as the order of matrices is maintained.",
        "distributive": "Verifying distributive property: A × (B + C) = A × B + A × C",
        "distributive_desc": "Matrix multiplication is distributive with respect to addition. Multiplying A by a sum of matrices is the same as adding the individual products.",
        "final_result": "Final result: Matrix multiplication {{rowsA}}×{{colsA}} by {{colsA}}×{{colsB}} completed successfully.",
        "scalar_verification": "Verification: Properties of scalar multiplication",
        "scalar_distributive": "Verifying distributive property: k × (A + B) = k × A + k × B",
        "scalar_distributive_desc": "Scalar multiplication is distributive with respect to matrix addition. Multiplying a scalar by a sum of matrices is the same as adding the individual scalar multiplications.",
        "scalar_associative": "Verifying associative property: (k × m) × A = k × (m × A)",
        "scalar_associative_desc": "Scalar multiplication is associative with respect to scalar multiplication. The way we group scalars does not change the final result.",
        "scalar_identity": "Verifying identity element: 1 × A = A",
        "scalar_identity_desc": "Scalar 1 is the identity element of multiplication. Multiplying a matrix by 1 does not change the matrix.",
        "scalar_final_result": "Final result: Scalar multiplication completed successfully."
      }
    }
  },
  "determinant": {
    "title": "Matrix Determinant",
    "description": "This calculator allows you to calculate the determinant of a square matrix, showing the step-by-step calculation and final result.",
    "matrix": "Matrix",
    "matrix_input": "Matrix",
    "matrix_placeholder": "Ex: 1 2; 3 4",
    "input_instructions": "Enter elements separated by spaces and rows separated by semicolons. Example: 1 2; 3 4 for a 2x2 matrix.",
    "preview": "Preview",
    "dimensions": "Dimension: {{rows}}×{{cols}}",
    "not_square_warning": "The matrix is not square. Determinant can only be calculated for square matrices.",
    "requirement_title": "Requirement for determinant calculation:",
    "square_requirement": "The matrix must be square, meaning it must have the same number of rows and columns.",
    "determinant_explanation": "The determinant is a scalar value that can be calculated from the elements of a square matrix.",
    "examples": "Examples",
    "examples_matrix": {
      "identity_2x2": "2×2 Identity Matrix",
      "simple_2x2": "Simple 2×2 Matrix",
      "triangular_3x3": "Triangular 3×3 Matrix",
      "standard_3x3": "Standard 3×3 Matrix",
      "singular_3x3": "Singular 3×3 Matrix",
      "diagonal_4x4": "Diagonal 4×4 Matrix",
      "complex_4x4": "Complex 4×4 Matrix"
    },
    "calculate_button": "Calculate",
    "result": "Result",
    "determinant": "Determinant",
    "zero_determinant_explanation": "Since the determinant is zero, the matrix is singular (not invertible) and has linearly dependent rows or columns.",
    "non_zero_determinant_explanation": "Since the determinant is non-zero, the matrix is non-singular (invertible) and has linearly independent rows and columns.",
    "show_explanation": "Show detailed explanation",
    "hide_explanation": "Hide detailed explanation",
    "step_by_step": "Step-by-step Solution",
    "steps": {
      "not_square_matrix": "The matrix is not square. It is not possible to calculate the determinant.",
      "identify_input_matrix": "Step {{step}}: Identify the input matrix.",
      "input_matrix": "Input matrix ({{rows}}×{{cols}}):",
      "matrix_1x1": "Step {{step}}: For a 1×1 matrix, the determinant is the element itself.",
      "formula_1x1": "Applying the formula: det(A) = a₁₁",
      "calculating_1x1": "Calculating: Determinant = {{value}}",
      "matrix_2x2": "Step {{step}}: For a 2×2 matrix, use the determinant formula.",
      "formula_2x2": "Applying the formula: det(A) = a₁₁·a₂₂ - a₁₂·a₂₁",
      "calculating_2x2": "Calculating: ({{a11}} × {{a22}}) - ({{a12}} × {{a21}}) = {{prod1}} - {{prod2}}",
      "larger_matrix": "Step {{step}}: For a {{size}}×{{size}} matrix, we use the Laplace expansion by cofactors method.",
      "laplace_expansion": "Applying the formula: Expansion by cofactors along the first row of the matrix.",
      "calculating_expanded_form": "Calculating: Determinant = {{formula}}",
      "minor_explanation": "Where M₀ⱼ is the minor of element (0,j), multiplied by the corresponding sign.",
      "calculate_cofactor": "Step {{step}}: Calculating the cofactor for element (0,{{col}}).",
      "submatrix": "Submatrix ({{rows}}×{{cols}}) after removing row 0 and column {{col}}:",
      "calculating_submatrix_det": "Calculating: Submatrix determinant = ({{a11}} × {{a22}}) - ({{a12}} × {{a21}})",
      "calculating_submatrix_result": "Calculating: {{prod1}} - {{prod2}} = {{result}}",
      "submatrix_determinant": "Calculating: Submatrix determinant = {{value}}",
      "calculating_cofactor": "Calculating: Cofactor C₀{{col}} = {{sign}}1 × {{minorDet}} = {{cofactor}}",
      "expansion_term": "Calculating: Term in expansion = {{element}} × {{cofactor}} = {{term}}",
      "sum_terms": "Step {{step}}: Adding all expansion terms.",
      "calculating_sum": "Calculating: Sum of all terms = {{result}}",
      "final_result": "Final result: The determinant of the matrix is {{value}}"
    },
    "verification": {
      "properties_title": "Verification: Determinant Properties",
      "area_representation": "The determinant of a 2×2 matrix represents the area of the parallelogram formed by the row or column vectors of the matrix.",
      "zero_determinant": "Since the determinant is zero, the matrix is singular (not invertible) and the row/column vectors are linearly dependent.",
      "non_zero_determinant": "Since the determinant is non-zero, the matrix is non-singular (invertible) and the row/column vectors are linearly independent.",
      "zero_system_implications": "This means that the corresponding linear system may have infinitely many solutions or no solution.",
      "non_zero_system_implications": "This means that the corresponding linear system has a unique solution.",
      "volume_interpretation": "For a 3×3 matrix, the determinant represents the volume of the parallelepiped formed by the row or column vectors.",
      "higher_order_interpretation": "For a higher-order matrix, the determinant has important geometric and algebraic interpretations in linear algebra."
    },
    "errors": {
      "enter_matrix": "Please enter the matrix.",
      "invalid_matrix_format": "Could not interpret the matrix. Check the format (values separated by spaces, rows separated by semicolons).",
      "invalid_matrix": "The matrix is invalid. Make sure all rows have the same number of columns.",
      "not_square_matrix": "The matrix is not square. To calculate the determinant, the matrix must have the same number of rows and columns.",
      "matrix_too_large": "For performance reasons, determinant calculation is limited to matrices of at most 5×5.",
      "calculation_error": "Error calculating the determinant. Check if the matrix is valid.",
      "unknown_error": "Unknown error processing the matrix.",
      "invalid_values": "The matrix contains invalid values. Use only numbers.",
      "same_columns": "All rows of a matrix must have the same number of columns."
    },
    "mathematical_concept": {
      "title": "Mathematical Concept",
      "definition_title": "Definition",
      "properties_title": "Properties",
      "definition_text": "The determinant is a scalar value associated with a square matrix. It has important applications in linear algebra and geometry, including solving systems of linear equations, calculating volume, and checking the invertibility of a matrix.",
      "important_requirement": "Important requirement",
      "square_requirement": "Only square matrices (same number of rows and columns) have a determinant.",
      "calculation_formulas": "Calculation Formulas",
      "for_2x2": "For a 2×2 matrix",
      "for_larger": "For larger matrices",
      "laplace_explanation": "The Laplace expansion by cofactors method is used.",
      "geometric_interpretation": "Geometric Interpretation",
      "geometric_importance": "The determinant has important geometric interpretations",
      "geometric_2x2": "For a 2×2 matrix: Area of the parallelogram defined by the row/column vectors",
      "geometric_3x3": "For a 3×3 matrix: Volume of the parallelepiped defined by the row/column vectors",
      "geometric_general": "In general: The scale factor in the linear transformation associated with the matrix",
      "visual_example": "Visual Example",
      "for_2x2_matrix": "For the 2×2 matrix",
      "example_explanation": "The determinant 5 represents the area of the parallelogram formed by the vectors (2,1) and (3,4)",
      "specific_applications": "Specific Applications",
      "cramer_rule": "Cramer's Rule",
      "cramer_explanation": "For solving systems of linear equations",
      "invertibility": "Invertibility",
      "invertibility_explanation": "A matrix is invertible if and only if its determinant is non-zero",
      "linear_transformations": "Linear Transformations",
      "transformation_explanation": "The determinant indicates whether a transformation preserves, inverts, or collapses space",
      "area_volume": "Area and Volume",
      "area_volume_explanation": "For calculating areas of parallelograms and volumes of parallelepipeds",
      "variable_change": "Change of Variables",
      "jacobian_explanation": "In multiple integrals, the Jacobian determinant is used for changes of variables",
      "characteristic_equation": "Characteristic Equation",
      "eigenvalues_explanation": "For calculating eigenvalues of a matrix in the form det(A - λI) = 0",
      "orientation": "Orientation",
      "orientation_explanation": "The sign of the determinant indicates the orientation of the transformed space (positive preserves, negative inverts)",
      "practical_applications": "Practical Applications",
      "applications": {
        "linear_systems": "Used in Cramer's rule to solve systems",
        "computer_graphics": "For calculating areas and detecting collinearity of points",
        "statistics": "In variance analysis and multivariate correlation",
        "physics": "In quantum mechanics and electromagnetic theory",
        "economics": "In econometric and equilibrium models",
        "machine_learning": "For checking singularity in covariance matrices",
        "cryptography": "In matrix-based cryptographic systems",
        "robotics": "For calculating transformations and detecting singularities in robotic manipulators",
        "image_processing": "For edge detection and morphological transformations"
      },
      "determinant_properties": "Determinant Properties",
      "properties": {
        "transpose_title": "Transposition",
        "transpose_formula": "det(A) = det(Aᵀ)",
        "transpose_description": "The determinant of a matrix is equal to the determinant of its transpose.",
        "scalar_title": "Scalar Multiplication",
        "scalar_formula": "det(kA) = kⁿ·det(A)",
        "scalar_description": "For an n×n matrix, multiplying the matrix by a scalar k multiplies the determinant by kⁿ.",
        "product_title": "Product Determinant",
        "product_formula": "det(AB) = det(A)·det(B)",
        "product_description": "The determinant of the product of matrices is the product of the determinants.",
        "inverse_title": "Inverse Determinant",
        "inverse_formula": "det(A⁻¹) = 1/det(A)",
        "inverse_description": "If A is invertible, the determinant of its inverse is the reciprocal of the determinant of A.",
        "row_swap_title": "Row/Column Exchange",
        "row_swap_description": "Swapping two rows or two columns inverts the sign of the determinant.",
        "row_swap_explanation": "If L_i ↔ L_j or C_i ↔ C_j, then det(new matrix) = -det(original matrix).",
        "linear_combination_title": "Linear Combination",
        "linear_combination_description": "If a row/column is a linear combination of the others, the determinant is zero.",
        "linear_combination_explanation": "This explains why matrices with linearly dependent rows/columns have a determinant of zero."
      },
      "special_matrices_determinants": "Determinants of Special Matrices",
      "special_matrices": {
        "triangular": "Triangular Matrix (upper/lower)",
        "triangular_explanation": "The determinant is the product of the elements on the main diagonal",
        "diagonal": "Diagonal Matrix",
        "diagonal_explanation": "The determinant is the product of the diagonal elements",
        "identity": "Identity Matrix",
        "identity_explanation": "det(I) = 1",
        "singular": "Singular Matrix",
        "singular_explanation": "det(A) = 0 (non-invertible matrix)",
        "orthogonal": "Orthogonal Matrix",
        "orthogonal_explanation": "det(Q) = ±1",
        "rotation_2d": "2D Rotation Matrix",
        "rotation_2d_explanation": "det(R) = 1",
        "reflection": "Reflection Matrix",
        "reflection_explanation": "det(R) = -1"
      },
      "calculation_methods": "Calculation Methods",
      "methods": {
        "sarrus_title": "Sarrus Rule (only for 3×3 matrices)",
        "sarrus_description": "Mnemonic technique for calculating 3×3 determinants without using cofactor expansion.",
        "cofactor_title": "Cofactor Expansion (Laplace method)",
        "cofactor_description": "Recursive method that expands the determinant along a row or column.",
        "gaussian_title": "Gaussian Elimination",
        "gaussian_description": "Transform the matrix to upper triangular form and multiply the diagonal elements."
      },
      "common_errors": "Common Errors",
      "errors": {
        "non_square": "Trying to calculate the determinant of a non-square matrix",
        "formula_confusion": "Confusing the formula for 2×2 determinants (it's ad - bc, not ad + bc)",
        "sign_errors": "Ignoring the sign when calculating cofactors in the Laplace expansion",
        "row_operations": "Forgetting to propagate the effect of row multiplications or exchanges on the final value",
        "trace_confusion": "Applying trace properties to the determinant or vice versa"
      },
      "linear_algebra_importance": "Importance in Linear Algebra",
      "cramer_theorem": "Cramer's Theorem",
      "cramer_theorem_explanation": "Uses determinants to solve systems of linear equations",
      "adjoint_inverse": "Adjoint and inverse",
      "adjoint_inverse_explanation": "The inverse of a matrix can be calculated using determinants",
      "eigenvalues": "Eigenvalues",
      "eigenvalues_explanation": "Determinants are used to find eigenvalues through the characteristic equation",
      "transformations_explanation": "The determinant indicates the change in volume under a linear transformation",
      "linear_dependence": "Linear Dependence",
      "dependence_explanation": "Vectors are linearly dependent if and only if the determinant of the matrix formed by them is zero"
    }
  },
  "inverse": {
    "title": "Matrix Inverse",
    "description": "This calculator allows you to calculate the inverse of a square matrix, showing the calculation steps and the final result.",
    "matrix": "Matrix",
    "matrix_input": "Matrix",
    "matrix_placeholder": "Ex: 1 2; 3 4",
    "input_instructions": "Enter elements separated by spaces and rows separated by semicolons. Example: 1 2; 3 4 for a 2x2 matrix.",
    "preview": "Preview",
    "dimensions": "Dimension: {{rows}}×{{cols}}",
    "not_square_warning": "The matrix is not square. The inverse matrix can only be calculated for square matrices.",
    "zero_determinant_warning": "The determinant of the matrix is zero. Matrices with zero determinant do not have an inverse.",
    "requirement_title": "Requirements for calculating the inverse matrix",
    "square_requirement": "The matrix must be square, that is, have the same number of rows and columns.",
    "non_zero_determinant": "The determinant of the matrix must be non-zero.",
    "inverse_explanation": "The inverse matrix A⁻¹ of a matrix A is the one that, when multiplied by A, results in the identity matrix: A × A⁻¹ = A⁻¹ × A = I",
    "examples": "Examples",
    "examples_matrix": {
      "identity_2x2": "Identity Matrix 2×2",
      "simple_2x2": "Simple Matrix 2×2",
      "integer_3x3": "Integer Matrix 3×3",
      "fractional_3x3": "Matrix with Fractions 3×3",
      "diagonal_3x3": "Diagonal Matrix 3×3"
    },
    "calculate_button": "Calculate",
    "result": "Result",
    "inverse_matrix": "Inverse Matrix",
    "not_invertible_explanation": "The matrix is not invertible because its determinant is zero.",
    "show_explanation": "Show detailed explanation",
    "hide_explanation": "Hide detailed explanation",
    "step_by_step": "Step-by-step solution",
    "steps": {
      "not_square_matrix": "The matrix is not square. It is not possible to calculate the inverse.",
      "identify_input_matrix": "Step {{step}}: Identify the input matrix.",
      "input_matrix": "Input matrix ({{rows}}×{{cols}}):",
      "calculate_determinant": "Step {{step}}: Calculate the determinant of the matrix.",
      "determinant_value": "Determinant = {{value}}",
      "zero_determinant": "Since the determinant is zero, the matrix has no inverse.",
      "cofactor_matrix": "Step {{step}}: Calculate the cofactor matrix.",
      "cofactor_explanation": "For each element aᵢⱼ of the original matrix, we calculate its cofactor:",
      "cofactor_formula": "Cofactor of aᵢⱼ = (-1)^(i+j) × determinant of the submatrix obtained by eliminating row i and column j.",
      "cofactor_matrix_result": "Cofactor matrix:",
      "adjoint_matrix": "Step {{step}}: Calculate the adjoint matrix (transpose of the cofactor matrix).",
      "adjoint_matrix_result": "Adjoint matrix:",
      "inverse_formula": "Step {{step}}: Calculate the inverse matrix using the formula: A⁻¹ = (1/det(A)) × adj(A).",
      "result": "Result: Inverse matrix ({{rows}}×{{cols}}):",
      "verification": "Step {{step}}: Verification (A × A⁻¹ = I).",
      "verification_explanation": "To verify that the inverse is correct, we multiply the original matrix by its inverse.",
      "verification_identity": "The result should be approximately equal to the identity matrix.",
      "final_conclusion": "Final conclusion: Inverse matrix calculated successfully."
    },
    "verification": {
      "properties_title": "Verification: Properties of the inverse matrix",
      "identity_property": "1. A × A⁻¹ = A⁻¹ × A = I",
      "identity_explanation": "A matrix multiplied by its inverse results in the identity matrix.",
      "inverse_of_inverse": "2. (A⁻¹)⁻¹ = A",
      "inverse_of_inverse_explanation": "The inverse of the inverse is the original matrix.",
      "product_inverse": "3. (A × B)⁻¹ = B⁻¹ × A⁻¹",
      "product_inverse_explanation": "The inverse of the product is the product of the inverses in the reverse order.",
      "scalar_inverse": "4. (kA)⁻¹ = (1/k) × A⁻¹, for k ≠ 0",
      "scalar_inverse_explanation": "The inverse of a matrix multiplied by a scalar is the inverse of the matrix multiplied by the reciprocal of the scalar.",
      "transpose_inverse": "5. (Aᵀ)⁻¹ = (A⁻¹)ᵀ",
      "transpose_inverse_explanation": "The transpose of the inverse is equal to the inverse of the transpose."
    },
    "errors": {
      "enter_matrix": "Please enter the matrix.",
      "invalid_matrix_format": "Could not interpret the matrix. Check the format (values separated by spaces, rows separated by semicolons).",
      "invalid_matrix": "The matrix is invalid. Make sure all rows have the same number of columns.",
      "not_square_matrix": "The matrix is not square. To calculate the inverse, the matrix must have the same number of rows and columns.",
      "zero_determinant": "The matrix has zero determinant and therefore has no inverse.",
      "calculation_error": "Error calculating the inverse matrix. Check if the matrix is valid.",
      "unknown_error": "Unknown error when processing the matrix.",
      "invalid_values": "The matrix contains invalid values. Use only numbers.",
      "same_columns": "All rows of a matrix must have the same number of columns."
    },
    "mathematical_concept": {
      "title": "Mathematical Concept",
      "definition_title": "Definition",
      "properties_title": "Properties",
      "definition_text": "The inverse matrix of a square matrix A, denoted by A⁻¹, is a matrix that, when multiplied by A, results in the identity matrix I. Formally: A × A⁻¹ = A⁻¹ × A = I.",
      "important_requirements": "Important requirements",
      "square_requirement": "The matrix must be square (same number of rows and columns).",
      "determinant_requirement": "The determinant of the matrix must be non-zero (non-singular matrix).",
      "calculation_methods": "Calculation methods",
      "adjoint_method": "Adjoint matrix method",
      "adjoint_formula": "A⁻¹ = (1/det(A)) × adj(A)",
      "adjoint_explanation": "Where adj(A) is the adjoint matrix (transpose of the cofactor matrix).",
      "gaussian_method": "Gaussian elimination method",
      "gaussian_explanation": "Transform the augmented matrix [A|I] into [I|A⁻¹] through elementary row operations.",
      "properties": {
        "title": "Properties of the inverse matrix",
        "identity_property": "Identity property",
        "identity_formula": "A × A⁻¹ = A⁻¹ × A = I",
        "inverse_uniqueness": "Uniqueness of the inverse",
        "uniqueness_explanation": "If A is invertible, then its inverse A⁻¹ is unique.",
        "inverse_of_inverse": "Inverse of the inverse",
        "inverse_of_inverse_formula": "(A⁻¹)⁻¹ = A",
        "product_inverse": "Inverse of the product",
        "product_inverse_formula": "(A × B)⁻¹ = B⁻¹ × A⁻¹",
        "product_inverse_explanation": "Note the reverse order in multiplication.",
        "scalar_inverse": "Inverse of scalar multiple",
        "scalar_inverse_formula": "(kA)⁻¹ = (1/k) × A⁻¹, for k ≠ 0",
        "transpose_inverse": "Inverse of transpose",
        "transpose_inverse_formula": "(Aᵀ)⁻¹ = (A⁻¹)ᵀ",
        "power_inverse": "Inverse of power",
        "power_inverse_formula": "(A^n)⁻¹ = (A⁻¹)^n, for integer n"
      },
      "special_cases": {
        "title": "Special cases",
        "identity_matrix": "Identity matrix",
        "identity_inverse": "I⁻¹ = I (The identity matrix is its own inverse)",
        "diagonal_matrix": "Diagonal matrix",
        "diagonal_inverse": "For a diagonal matrix D, D⁻¹ has the reciprocals of the diagonal elements",
        "diagonal_formula": "If D = diag(d₁, d₂, ..., dₙ), then D⁻¹ = diag(1/d₁, 1/d₂, ..., 1/dₙ)",
        "orthogonal_matrix": "Orthogonal matrix",
        "orthogonal_inverse": "For an orthogonal matrix Q, Q⁻¹ = Qᵀ",
        "triangular_matrix": "Triangular matrix",
        "triangular_inverse": "The inverse of a triangular matrix is triangular of the same type"
      },
      "applications": {
        "title": "Applications of the inverse matrix",
        "linear_systems": "Solving linear systems",
        "linear_systems_explanation": "If Ax = b, then x = A⁻¹b",
        "transformations": "Inverse linear transformations",
        "transformations_explanation": "The inverse represents the transformation that undoes the original transformation",
        "least_squares": "Least squares method",
        "least_squares_formula": "x = (AᵀA)⁻¹Aᵀb",
        "markov_chains": "Markov chains in steady state",
        "markov_explanation": "Finding the stationary distribution in Markov processes",
        "computer_graphics": "Transformations in computer graphics",
        "graphics_explanation": "For operations such as rotation, translation, and scaling in 3D",
        "economics": "Leontief input-output economic models",
        "economics_explanation": "For analyzing interdependence between different economic sectors",
        "control_theory": "Control theory",
        "control_explanation": "For controller design and analysis of dynamic systems",
        "quantum_mechanics": "Quantum mechanics",
        "quantum_explanation": "In linear operators and unitary transformations"
      },
      "numerical_considerations": {
        "title": "Numerical considerations",
        "conditioning": "Conditioning",
        "conditioning_explanation": "Poorly conditioned matrices (determinant close to zero) can lead to numerical inaccuracies",
        "computational_cost": "Computational cost",
        "cost_explanation": "Computing the inverse has O(n³) complexity for n×n matrices",
        "alternatives": "Alternatives to the inverse",
        "alternative_explanation": "In many applications, it is more efficient and numerically stable to solve linear systems directly, rather than explicitly computing the inverse"
      }
    }
  }
} 